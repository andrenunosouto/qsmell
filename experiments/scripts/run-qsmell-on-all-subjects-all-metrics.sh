#!/usr/bin/env bash
#
# ------------------------------------------------------------------------------
# This script runs QSmell on all programs (i.e., quantum circuit matrix, previous
# generated by the `get-quantum-circuit-as-a-matrix.sh`) and computes all smell
# metrics.
#
# Usage:
# run-qsmell-on-all-subjects-all-metrics.sh
#   [--subjects_file_path <path, e.g., ../data/subjects.csv>]
#   [--matrices_dir_path <path, e.g., ../../subjects/data/generated/quantum-circuit-as-matrix]
#   [--output_dir_path <path, e.g., ../data/generated/qsmell-metrics>]
#   [help]
# ------------------------------------------------------------------------------

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
source "$SCRIPT_DIR/../../utils/scripts/utils.sh" || exit 1

# ------------------------------------------------------------------------- Args

USAGE="Usage: ${BASH_SOURCE[0]} [--subjects_file_path <path, e.g., ../data/subjects.csv>] [--matrices_dir_path <path, e.g., ../../subjects/data/generated/quantum-circuit-as-matrix] [--output_dir_path <path, e.g., ../data/generated/qsmell-metrics>] [help]"
if [ "$#" -ne "0" ] && [ "$#" -ne "1" ] && [ "$#" -ne "2" ] && [ "$#" -ne "4" ] && [ "$#" -ne "6" ]; then
  die "$USAGE"
fi

SUBJECTS_FILE_PATH="$SCRIPT_DIR/../../subjects/data/subjects.csv"
MATRICES_DIR_PATH="$SCRIPT_DIR/../../subjects/data/generated/quantum-circuit-as-matrix"
OUTPUT_DIR_PATH="$SCRIPT_DIR/../data/generated/qsmell-metrics"

while [[ "$1" = --* ]]; do
  OPTION=$1; shift
  case $OPTION in
    (--subjects_file_path)
      SUBJECTS_FILE_PATH=$1;
      shift;;
    (--matrices_dir_path)
      MATRICES_DIR_PATH=$1;
      shift;;
    (--output_dir_path)
      OUTPUT_DIR_PATH=$1;
      shift;;
    (--help)
      echo "$USAGE"
      exit 0
    (*)
      die "$USAGE";;
  esac
done

# Check whether all arguments have been initialized
[ "$SUBJECTS_FILE_PATH" != "" ] || die "[ERROR] Missing --subjects_file_path argument!"
[ "$MATRICES_DIR_PATH" != "" ]  || die "[ERROR] Missing --matrices_dir_path argument!"
[ "$OUTPUT_DIR_PATH" != "" ]    || die "[ERROR] Missing --output_dir_path argument!"
# Check whether input files exit and it is not empty
[ -s "$SUBJECTS_FILE_PATH" ]    || die "[ERROR] $SUBJECTS_FILE_PATH does not exist or it is empty!"
[ -d "$MATRICES_DIR_PATH" ]     || die "[ERROR] $MATRICES_DIR_PATH does not exist!"
# Create output directory
mkdir -p "$OUTPUT_DIR_PATH"

# ------------------------------------------------------------------------- Args

while read -r row; do
    origin=$(echo "$row" | cut -f1 -d',')
      name=$(echo "$row" | cut -f2 -d',')
  filepath=$(echo "$row" | cut -f3 -d',')
  filepath="$SCRIPT_DIR/../../tools/$filepath"
  [ -s "$filepath" ] || die "[ERROR] $filepath does not exist or it is empty!"

  matrix_file_path="$MATRICES_DIR_PATH/$name.csv"
  [ -s "$matrix_file_path" ] || die "[ERROR] $matrix_file_path does not exist or it is empty!"

  # Quantum Smell that require a matrix
  for smell_metric in "CG" "ROC" "LC" "IM" "IdQ" "IQ" "AQ"; do
    output_file_path="$OUTPUT_DIR_PATH/$smell_metric/$name/data.csv"
    output_dir_path=$(echo "$output_file_path" | rev | cut -f2- -d'/' | rev)
    rm -rf "$output_dir_path"; mkdir -p "$output_dir_path"

    time bash "$SCRIPT_DIR/run-qsmell.sh" \
      --matrix_file_path "$matrix_file_path" \
      --smell_metric "$smell_metric" \
      --output_file_path "$output_file_path" || die "[ERROR] Failed to execute run-qsmell.sh on $matrix_file_path!"
  done

  # Quantum Smell that require source code
  for smell_metric in "NC" "LPQ"; do
    output_file_path="$OUTPUT_DIR_PATH/$smell_metric/$name/data.csv"
    output_dir_path=$(echo "$output_file_path" | rev | cut -f2- -d'/' | rev)
    rm -rf "$output_dir_path"; mkdir -p "$output_dir_path"

    time bash "$SCRIPT_DIR/run-qsmell.sh" \
      --input_file_path "$filepath" \
      --smell_metric "$smell_metric" \
      --output_file_path "$output_file_path" || die "[ERROR] Failed to execute run-qsmell.sh on $matrix_file_path!"
  done
done < <(tail -n +2 "$SUBJECTS_FILE_PATH")

# Collect all data generated by QSmell in a single CSV file
find "$OUTPUT_DIR_PATH" -mindepth 3 -maxdepth 3 -type f -name "data.csv" | head -n1 | xargs head -n1 > "$OUTPUT_DIR_PATH/data.csv"
find "$OUTPUT_DIR_PATH" -mindepth 3 -maxdepth 3 -type f -name "data.csv" -exec tail -n +2 {} \;     >> "$OUTPUT_DIR_PATH/data.csv"
[ -s "$OUTPUT_DIR_PATH/data.csv" ] || die "[ERROR] $OUTPUT_DIR_PATH/data.csv does not exist or it is empty!"

echo "DONE!"
exit 0

# EOF
